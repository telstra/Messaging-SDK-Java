/*
 * Messaging API v3.1.0
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale. 
 *
 * OpenAPI spec version: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telstra;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.math.BigDecimal;
/**
 * GetMessages200ResponsePaging
 */


public class GetMessages200ResponsePaging {
  @SerializedName("nextPage")
  private String nextPage = null;

  @SerializedName("previousPage")
  private String previousPage = null;

  @SerializedName("lastPage")
  private String lastPage = null;

  @SerializedName("totalCount")
  private BigDecimal totalCount = null;

  public GetMessages200ResponsePaging nextPage(String nextPage) {
    this.nextPage = nextPage;
    return this;
  }

   /**
   * The next page of results.
   * @return nextPage
  **/
  @Schema(description = "The next page of results.")
  public String getNextPage() {
    return nextPage;
  }

  public void setNextPage(String nextPage) {
    this.nextPage = nextPage;
  }

  public GetMessages200ResponsePaging previousPage(String previousPage) {
    this.previousPage = previousPage;
    return this;
  }

   /**
   * The previous page of results.
   * @return previousPage
  **/
  @Schema(description = "The previous page of results.")
  public String getPreviousPage() {
    return previousPage;
  }

  public void setPreviousPage(String previousPage) {
    this.previousPage = previousPage;
  }

  public GetMessages200ResponsePaging lastPage(String lastPage) {
    this.lastPage = lastPage;
    return this;
  }

   /**
   * The last page of results.
   * @return lastPage
  **/
  @Schema(description = "The last page of results.")
  public String getLastPage() {
    return lastPage;
  }

  public void setLastPage(String lastPage) {
    this.lastPage = lastPage;
  }

  public GetMessages200ResponsePaging totalCount(BigDecimal totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * The total number of pages.
   * @return totalCount
  **/
  @Schema(description = "The total number of pages.")
  public BigDecimal getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(BigDecimal totalCount) {
    this.totalCount = totalCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMessages200ResponsePaging getMessages200ResponsePaging = (GetMessages200ResponsePaging) o;
    return Objects.equals(this.nextPage, getMessages200ResponsePaging.nextPage) &&
        Objects.equals(this.previousPage, getMessages200ResponsePaging.previousPage) &&
        Objects.equals(this.lastPage, getMessages200ResponsePaging.lastPage) &&
        Objects.equals(this.totalCount, getMessages200ResponsePaging.totalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextPage, previousPage, lastPage, totalCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{\n");
    sb.append("    nextPage: ").append(toIndentedString(nextPage)).append("\n");
    sb.append("    previousPage: ").append(toIndentedString(previousPage)).append("\n");
    sb.append("    lastPage: ").append(toIndentedString(lastPage)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
