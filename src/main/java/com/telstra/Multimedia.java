/*
 * Messaging API v3.1.0
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale. 
 *
 * OpenAPI spec version: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telstra;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Multimedia
 */


public class Multimedia {
  @SerializedName("type")
  private String type = null;

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("payload")
  private String payload = null;

  public Multimedia type(String type) {
    this.type = type;
    return this;
  }

   /**
   * the type of multimedia content file you&#x27;re sending (image, audio or video) followed by the file type. Use the format \&quot;multimedia type/file type\&quot;, e.g. \&quot;image/PNG\&quot; or \&quot;audio/MP3\&quot;. Supported file types:JPEG, BMP, GIF87a, GIF89a, PNG, MP3, WAV, MPEG, MPG, MP4, 3GP and US-ASCII.
   * @return type
  **/
  @Schema(example = "image/jpeg", required = true, description = "the type of multimedia content file you're sending (image, audio or video) followed by the file type. Use the format \"multimedia type/file type\", e.g. \"image/PNG\" or \"audio/MP3\". Supported file types:JPEG, BMP, GIF87a, GIF89a, PNG, MP3, WAV, MPEG, MPG, MP4, 3GP and US-ASCII.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Multimedia fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * The name of the multimedia file.
   * @return fileName
  **/
  @Schema(example = "image/jpeg", required = true, description = "The name of the multimedia file.")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public Multimedia payload(String payload) {
    this.payload = payload;
    return this;
  }

   /**
   * The base64 encoded content. You can use [this online tool] to encode an image, or [Base64 Guru] to encode a video or audio file.
   * @return payload
  **/
  @Schema(example = "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==", required = true, description = "The base64 encoded content. You can use [this online tool](https://elmah.io/tools/base64-image-encoder/) to encode an image, or [Base64 Guru](https://base64.guru/) to encode a video or audio file. ")
  public String getPayload() {
    return payload;
  }

  public void setPayload(String payload) {
    this.payload = payload;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Multimedia multimedia = (Multimedia) o;
    return Objects.equals(this.type, multimedia.type) &&
        Objects.equals(this.fileName, multimedia.fileName) &&
        Objects.equals(this.payload, multimedia.payload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, fileName, payload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
