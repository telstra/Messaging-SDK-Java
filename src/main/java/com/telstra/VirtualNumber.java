/*
 * Messaging API v3.1.0
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale. 
 *
 * OpenAPI spec version: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telstra;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * VirtualNumber
 */


public class VirtualNumber {
  @SerializedName("virtualNumber")
  private String virtualNumber = null;

  @SerializedName("replyCallbackUrl")
  private String replyCallbackUrl = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("lastUse")
  private OffsetDateTime lastUse = null;

  public VirtualNumber virtualNumber(String virtualNumber) {
    this.virtualNumber = virtualNumber;
    return this;
  }

   /**
   * The Virtual Number assigned to your account. 
   * @return virtualNumber
  **/
  @Schema(example = "67451255", description = "The Virtual Number assigned to your account. ")
  public String getVirtualNumber() {
    return virtualNumber;
  }

  public void setVirtualNumber(String virtualNumber) {
    this.virtualNumber = virtualNumber;
  }

  public VirtualNumber replyCallbackUrl(String replyCallbackUrl) {
    this.replyCallbackUrl = replyCallbackUrl;
    return this;
  }

   /**
   * The URL that replies to the Virtual Number will be posted to.
   * @return replyCallbackUrl
  **/
  @Schema(example = "http://www.example.com", description = "The URL that replies to the Virtual Number will be posted to.")
  public String getReplyCallbackUrl() {
    return replyCallbackUrl;
  }

  public void setReplyCallbackUrl(String replyCallbackUrl) {
    this.replyCallbackUrl = replyCallbackUrl;
  }

  public VirtualNumber tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public VirtualNumber addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Any customisable tags assigned to the Virtual Number. 
   * @return tags
  **/
  @Schema(description = "Any customisable tags assigned to the Virtual Number. ")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public VirtualNumber lastUse(OffsetDateTime lastUse) {
    this.lastUse = lastUse;
    return this;
  }

   /**
   * The last time the Virtual Number was used to send a message.
   * @return lastUse
  **/
  @Schema(description = "The last time the Virtual Number was used to send a message.")
  public OffsetDateTime getLastUse() {
    return lastUse;
  }

  public void setLastUse(OffsetDateTime lastUse) {
    this.lastUse = lastUse;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualNumber virtualNumber = (VirtualNumber) o;
    return Objects.equals(this.virtualNumber, virtualNumber.virtualNumber) &&
        Objects.equals(this.replyCallbackUrl, virtualNumber.replyCallbackUrl) &&
        Objects.equals(this.tags, virtualNumber.tags) &&
        Objects.equals(this.lastUse, virtualNumber.lastUse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(virtualNumber, replyCallbackUrl, tags, lastUse);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{\n");
    sb.append("    virtualNumber: ").append(toIndentedString(virtualNumber)).append("\n");
    sb.append("    replyCallbackUrl: ").append(toIndentedString(replyCallbackUrl)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    lastUse: ").append(toIndentedString(lastUse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
