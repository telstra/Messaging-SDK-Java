/*
 * Messaging API v3.1.0
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale. 
 *
 * OpenAPI spec version: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telstra;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.UUID;
/**
 * GetReports201Response
 */


public class GetReports201Response {
  @SerializedName("reportId")
  private UUID reportId = null;

  @SerializedName("reportCallbackUrl")
  private String reportCallbackUrl = null;

  @SerializedName("reportStatus")
  private String reportStatus = null;

  public GetReports201Response reportId(UUID reportId) {
    this.reportId = reportId;
    return this;
  }

   /**
   * When your report is ready for download, you can use this UUID to fetch it with the GET /reports/{reportId} endpoint. 
   * @return reportId
  **/
  @Schema(description = "When your report is ready for download, you can use this UUID to fetch it with the GET /reports/{reportId} endpoint. ")
  public UUID getReportId() {
    return reportId;
  }

  public void setReportId(UUID reportId) {
    this.reportId = reportId;
  }

  public GetReports201Response reportCallbackUrl(String reportCallbackUrl) {
    this.reportCallbackUrl = reportCallbackUrl;
    return this;
  }

   /**
   * If you provided a reportCallbackUrl in your request, it will be returned here.
   * @return reportCallbackUrl
  **/
  @Schema(description = "If you provided a reportCallbackUrl in your request, it will be returned here.")
  public String getReportCallbackUrl() {
    return reportCallbackUrl;
  }

  public void setReportCallbackUrl(String reportCallbackUrl) {
    this.reportCallbackUrl = reportCallbackUrl;
  }

  public GetReports201Response reportStatus(String reportStatus) {
    this.reportStatus = reportStatus;
    return this;
  }

   /**
   * The status of the report. It will be either:        * **queued** – the report is in the queue for generation.        * **completed** – the report is ready for download.        * **failed** – the report failed to generate. Please try again. 
   * @return reportStatus
  **/
  @Schema(description = "The status of the report. It will be either:        * **queued** – the report is in the queue for generation.        * **completed** – the report is ready for download.        * **failed** – the report failed to generate. Please try again. ")
  public String getReportStatus() {
    return reportStatus;
  }

  public void setReportStatus(String reportStatus) {
    this.reportStatus = reportStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetReports201Response getReports201Response = (GetReports201Response) o;
    return Objects.equals(this.reportId, getReports201Response.reportId) &&
        Objects.equals(this.reportCallbackUrl, getReports201Response.reportCallbackUrl) &&
        Objects.equals(this.reportStatus, getReports201Response.reportStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportId, reportCallbackUrl, reportStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{\n");
    sb.append("    reportId: ").append(toIndentedString(reportId)).append("\n");
    sb.append("    reportCallbackUrl: ").append(toIndentedString(reportCallbackUrl)).append("\n");
    sb.append("    reportStatus: ").append(toIndentedString(reportStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
