/*
 * Messaging API v3.1.0
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale. 
 *
 * OpenAPI spec version: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.telstra;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * OAuth
 */


public class OAuth {
  @SerializedName("access_token")
  private String accessToken = null;

  @SerializedName("token_type")
  private String tokenType = null;

  @SerializedName("expires_in")
  private String expiresIn = null;

  public OAuth accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * This is your OAuth 2.0 Authentication Token. It will be valid for one hour.
   * @return accessToken
  **/
  @Schema(example = "1234567890123456788901234567", description = "This is your OAuth 2.0 Authentication Token. It will be valid for one hour.")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public OAuth tokenType(String tokenType) {
    this.tokenType = tokenType;
    return this;
  }

   /**
   * This is the Authentication Token type.
   * @return tokenType
  **/
  @Schema(example = "Bearer", description = "This is the Authentication Token type.")
  public String getTokenType() {
    return tokenType;
  }

  public void setTokenType(String tokenType) {
    this.tokenType = tokenType;
  }

  public OAuth expiresIn() {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * This is when your token will expire.
   * @return expiresIn
  **/
  @Schema(example = "3599", description = "This is when your token will expire.")
  public String getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(String expiresIn) {
    this.expiresIn = expiresIn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OAuth oauth = (OAuth) o;
    return Objects.equals(this.accessToken, oauth.accessToken) &&
        Objects.equals(this.tokenType, oauth.tokenType) &&
        Objects.equals(this.expiresIn, oauth.expiresIn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessToken, tokenType, expiresIn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
